local url = 'https://raw.githubusercontent.com/TeamB-dot/XAUHIfhioasuhfgaioshugiaosghuisaihougsaiouhguiohasghiouashuigoasiouhgasiouhgihuo/refs/heads/main/loader'
local success, response = pcall(function()
    return game:HttpGet(url)
end)

if success and response then
    if syn and syn.queue_on_teleport then
        syn.queue_on_teleport("loadstring(game:HttpGet('"..url.."'))()")
    elseif queue_on_teleport then
        queue_on_teleport("loadstring(game:HttpGet('"..url.."'))()")
    else
        dbg("queue_on_teleport | Your Executor Does Not Support Auto Farm System.")
    end
else
    dbg("Error loading code.")
end

Time = 1
repeat wait() until game:IsLoaded()
wait(Time)

local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false

function TPReturner()
    local Site
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end

    if Site.nextPageCursor and Site.nextPageCursor ~= "null" then
        foundAnything = Site.nextPageCursor
    end

    local Servers = {}
    for _, v in pairs(Site.data) do
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            table.insert(Servers, v)
        end
    end

    table.sort(Servers, function(a, b)
        return a.playing > b.playing -- Größere Server zuerst
    end)

    for _, v in ipairs(Servers) do
        local ID = tostring(v.id)
        local Possible = true
        for _, Existing in pairs(AllIDs) do
            if ID == tostring(Existing) then
                Possible = false
                break
            end
        end

        if Possible then
            -- Geringe Wahrscheinlichkeit, kleinere Server zu nehmen
            local playerRatio = v.playing / v.maxPlayers
            if playerRatio > 0.75 or math.random() < 0.1 then -- Priorität auf große Server
                table.insert(AllIDs, ID)
                pcall(function()
                    writefile("NotSameServers_BLACKAIR.json", game:GetService("HttpService"):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
                break -- Nur einmal teleportieren
            end
        end
    end
end

function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end

local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local player = game:GetService("Players").LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Main Gui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "WatermarkGui"
screenGui.IgnoreGuiInset = true
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

-- Scaling
local uiScale = Instance.new("UIScale", screenGui)
local function adjustScale()
	local size = workspace.CurrentCamera.ViewportSize
	uiScale.Scale = size.X < 1000 and 0.75 or 1
end
adjustScale()
RunService.Heartbeat:Connect(adjustScale)

-- Watermark Frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 450, 0, 60)
frame.Position = UDim2.new(0.5, -225, 0, 90) --  Jetzt tiefer, nicht mehr in Healthbar
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
frame.BackgroundTransparency = 0.2
frame.BorderSizePixel = 0
frame.ClipsDescendants = true
frame.Parent = screenGui


-- Corner
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0.15, 0)
corner.Parent = frame

-- Gradient Background
local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(15, 15, 15)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(40, 40, 40))
}
gradient.Rotation = 90
gradient.Parent = frame

-- Watermark Text
local label = Instance.new("TextLabel")
label.Size = UDim2.new(1, -20, 1, -20)
label.Position = UDim2.new(0, 10, 0, 10)
label.BackgroundTransparency = 1
label.Text = "BlackAir Auto Farm" --  Name geändert
label.TextColor3 = Color3.fromRGB(255, 255, 255)
label.TextSize = 28
label.Font = Enum.Font.GothamBlack
label.TextStrokeTransparency = 0.65
label.TextScaled = true
label.Parent = frame

-- FPS Label
local fpsLabel = Instance.new("TextLabel")
fpsLabel.Size = UDim2.new(1, -20, 0, 18)
fpsLabel.Position = UDim2.new(0, 10, 1, -22)
fpsLabel.BackgroundTransparency = 1
fpsLabel.TextColor3 = Color3.fromRGB(150, 150, 150)
fpsLabel.TextSize = 14
fpsLabel.Font = Enum.Font.Gotham
fpsLabel.TextXAlignment = Enum.TextXAlignment.Right
fpsLabel.Text = "FPS: ..."
fpsLabel.Parent = frame

-- Glow
local glow = Instance.new("ImageLabel")
glow.Name = "Glow"
glow.Size = UDim2.new(1, 8, 1, 8)
glow.Position = UDim2.new(0, -4, 0, -4)
glow.BackgroundTransparency = 1
glow.Image = "rbxassetid://5028857084"
glow.ImageColor3 = Color3.fromRGB(0, 200, 255)
glow.ImageTransparency = 0.85
glow.ZIndex = frame.ZIndex - 1
glow.Parent = frame

-- Particle "Smoke" system
local particleFrame = Instance.new("Frame")
particleFrame.Size = UDim2.new(1, 0, 1, 0)
particleFrame.BackgroundTransparency = 1
particleFrame.ClipsDescendants = true
particleFrame.Parent = frame

local function createParticle()
	local p = Instance.new("Frame")
	p.Size = UDim2.new(0, math.random(6, 12), 0, math.random(6, 12))
	p.Position = UDim2.new(math.random(), 0, 1, 0)
	p.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	p.BackgroundTransparency = 0.85
	p.ZIndex = 5
	p.Parent = particleFrame

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(1, 0)
	corner.Parent = p

	local targetPos = UDim2.new(p.Position.X.Scale, 0, -0.2, 0)
	local t = TweenService:Create(p, TweenInfo.new(math.random(3, 6), Enum.EasingStyle.Linear), {Position = targetPos})
	t:Play()
	t.Completed:Connect(function() p:Destroy() end)
end

task.spawn(function()
	while true do
		createParticle()
		wait(0.2)
	end
end)

-- Load sound
local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://17582299860"
sound.Volume = 1
sound.Parent = screenGui
sound:Play()

-- Watermark Animation
local function show()
	label.TextTransparency = 1
	frame.Visible = true
	glow.ImageTransparency = 1

	-- Ändere das hier:
    local slide = TweenService:Create(frame, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Position = UDim2.new(0.5, -225, 0, 100)})
	local fade = TweenService:Create(label, TweenInfo.new(1, Enum.EasingStyle.Quad), {TextTransparency = 0})
	local glowIn = TweenService:Create(glow, TweenInfo.new(1), {ImageTransparency = 0.85})

	slide:Play()
	fade:Play()
	glowIn:Play()

	fade.Completed:Wait()
end


-- Update FPS
RunService.RenderStepped:Connect(function()
	local fps = math.floor(1 / RunService.RenderStepped:Wait())
	fpsLabel.Text = "FPS: " .. fps
end)

--===[ SETUP ]===--
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local BridgeNet = ReplicatedStorage:WaitForChild("BridgeNet2")
local identifierStorage = BridgeNet:WaitForChild("identifierStorage")

function debug(msg)
    print("[DEBUG]: " .. tostring(msg))
end

--===[ VEHICLE SYSTEM ]===--
function findPlayerCar()
    for _, vehicle in pairs(workspace.Vehicles:GetChildren()) do
        if vehicle.Name == "Orange" then continue end
        local info = vehicle:FindFirstChild("InfoFolder")
        if info and info:FindFirstChild("Owner") and tostring(info.Owner.Value):lower() == player.Name:lower() then
            debug("Sigma car : " .. vehicle.Name)
            return vehicle
        end
    end
    debug("car not found???!?!")
    return nil
end

function unlockVehicle(car)
    ReplicatedStorage.Client.Communication.LockVehicle:InvokeServer(car, false)
    debug("Car unlocked")
end

function sitInCar(car)
    local seat = car:FindFirstChild("Seats") and car.Seats:FindFirstChild("Seat1")
    if not seat then debug("Seat not found!") return end

    local byte = identifierStorage:GetAttribute("RemoteEvent_OnSitVehicleSeat")
    if not byte then debug("SitByte error!") return end

    local args = {
        {
            {
                KevArgs = { car, seat }
            },
            byte
        }
    }

    BridgeNet.dataRemoteEvent:FireServer(unpack(args))
    
    -- Warte bis Spieler wirklich sitzt (max. 5 Sek.)
    local start = os.clock()
    while os.clock() - start < 5 do
        if seat.Occupant and seat.Occupant.Parent == player.Character then
            break
        end
        task.wait(0.1)
    end

    debug("Player In Car")
end

function teleportCarToCoordinates(car, pos)
    for _, part in pairs(car:GetDescendants()) do
        if part:IsA("BasePart") then part.Anchored = true end
    end
    car:PivotTo(CFrame.new(pos + Vector3.new(0, 300, 0)))
    task.wait(0.2)
    car:PivotTo(CFrame.new(pos + Vector3.new(0, 300, 0)))
    task.wait(0.2)
    car:PivotTo(CFrame.new(pos))
    task.wait(0.2)
    for _, part in pairs(car:GetDescendants()) do
        if part:IsA("BasePart") then part.Anchored = false end
    end
    debug("Car TP to POS")
end

function teleportCarCloseToPlayer(car)
    local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if not root then debug("no HRP found!") return end
    local target = root.Position + root.CFrame.LookVector * 5
    for _, part in pairs(car:GetDescendants()) do if part:IsA("BasePart") then part.Anchored = true end end
    car:PivotTo(CFrame.new(target))
    wait(0.1)
    for _, part in pairs(car:GetDescendants()) do if part:IsA("BasePart") then part.Anchored = false end end
end

function exitCar(customTP)
    local exitByte = identifierStorage:GetAttribute("RemoteEvent_VehicleInteraction")
    if not exitByte then return end

    local args = {
        {
            {
                KevArgs = { [1] = 6 }
            },
            exitByte
        }
    }

    BridgeNet.dataRemoteEvent:FireServer(unpack(args))

    if customTP then
        task.delay(1, function()
            local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
            if root then
                root.CFrame = CFrame.new(customTP)
            end
        end)
    end
end

function renameATMs()
    local atmFolder = workspace.Map.Shop_Rob.InkasseBank
    local count = 0
    for _, model in ipairs(atmFolder:GetChildren()) do
        if model:IsA("Model") and model.Name:sub(1,3) == "ATM" and model:FindFirstChild("Main") then
            model.Name = "ATM" .. tostring(count + 1)
            count += 1
            debug("ATM Rename: " .. model.Name)
        end
    end
    return count
end

function checkATMsBeforeExit()
    local atmFolder = workspace.Map.Shop_Rob.InkasseBank
    local brokenCount = 0
    local totalATM = 0

    for _, model in ipairs(atmFolder:GetChildren()) do
        if model:IsA("Model") and model.Name:find("ATM") and model:FindFirstChild("Main") then
            totalATM += 1
            if model:GetAttribute("Destroyed") == true then
                brokenCount += 1
                debug(model.Name .. " = Destroyed")
            else
                debug(model.Name .. " = Intakt")
            end
        end
    end

    if totalATM > 0 and brokenCount == totalATM then
        debug("Alle ATMs zerstört, Bank wird übersprungen.")
        return true
    end
    return false
end

local webhookUrl = "https://discord.com/api/webhooks/1417219625577615501/MeN7r39hMSpALWRndNHim3RD6gSqLaMRlWZkI3S3uh4HJyDc_ZJfIYpcOPMV5ypm0-e5"
local HttpService = game:GetService("HttpService")
local player = game:GetService("Players").LocalPlayer

-- Tausender-Trennzeichen Funktion
local function formatNumber(num)
    local formatted = tostring(num)
    local k
    while true do
        formatted, k = formatted:gsub("^(-?%d+)(%d%d%d)", '%1,%2')
        if k == 0 then break end
    end
    return formatted
end

-- Webhook Funktion
local function sendToDiscord(amount)
    local username = player.Name
    local timeNow = os.date("%d.%m.%Y %H:%M:%S") -- Deutsche Zeit
    local formattedMoney = formatNumber(amount) .. " $"

    local data = {
        ["username"] = "Robbery Logger",
        ["embeds"] = {{
            ["title"] = "💰 Geld eingesammelt!",
            ["description"] = "**Spieler:** " .. username .. "\n" ..
                              "**DirtyMoney:** " .. formattedMoney .. "\n" ..
                              "**Zeit:** " .. timeNow,
            ["color"] = 65280
        }}
    }

    local jsonData = HttpService:JSONEncode(data)

    local requestFunction = http_request or request
    if requestFunction then
        local success, result = pcall(function()
            return requestFunction({
                Url = webhookUrl,
                Method = "POST",
                Headers = {
                    ["Content-Type"] = "application/json"
                },
                Body = jsonData
            })
        end)

        if success then
            print("[Webhook] ✅ Gesendet: " .. formattedMoney .. " | " .. username)
        else
            warn("[Webhook] ❌ Fehler: " .. tostring(result))
        end
    else
        warn("[Webhook] ❌ Kein kompatibler Request-Handler gefunden!")
    end
end

--===[ FUNKTION MIT ERWEITERUNG ]===--
function checkAndEquipCashOutItem()
    local Backpack = player:FindFirstChild("Backpack")
    if not Backpack then return end

    for _, item in ipairs(Backpack:GetChildren()) do
        if item:IsA("Tool") then
            local remote = item:FindFirstChild("OnCashOut")
            if remote then
                -- Tool ausrüsten
                player.Character.Humanoid:EquipTool(item)
                debug("Money Bag Found: " .. item.Name)

                task.wait(0.5)
                remote:Destroy()

                -- DirtyMoney-Attribut prüfen
                local dirtyMoney = item:GetAttribute("DirtyMoney")
                if dirtyMoney then
                    debug("DirtyMoney erkannt: " .. tostring(dirtyMoney))
                    sendToDiscord(dirtyMoney)
                else
                    debug("Kein DirtyMoney Attribut gefunden")
                end

                break
            end
        end
    end
end

function destroyATMs(count)
    local byte = identifierStorage:GetAttribute("RemoteEvent_OnMellee")
    if not byte then debug("MeleeByte Error") return end

    for i = 1, count do
        local atm = workspace.Map.Shop_Rob.InkasseBank:FindFirstChild("ATM" .. tostring(i))
        if atm and atm:FindFirstChild("Main") then
            local args = {
                {
                    {
                        KevArgs = {
                            {
                                {
                                    HitType = 3,
                                    Model = atm,
                                    Hit = atm.Main
                                }
                            },
                            3
                        }
                    },
                    byte
                }
            }
            BridgeNet.dataRemoteEvent:FireServer(unpack(args))
            debug("Zerstöre ATM" .. tostring(i))
            wait(0.5)
        end
    end
end

function collectCash()
    local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if not root then debug("no HRP!") return end

    local collected = 0
    for _, mesh in ipairs(workspace.Ignore:GetDescendants()) do
        if mesh:IsA("MeshPart") and (mesh.Position - root.Position).Magnitude <= 45 then
            local prompt = mesh:FindFirstChildOfClass("ProximityPrompt")
            if prompt then
                prompt.HoldDuration = 0
                mesh.Anchored = true
                mesh.CFrame = CFrame.new(root.Position - Vector3.new(0, 2, 0))
                for _ = 1, 200 do
                    fireproximityprompt(prompt, 0)
                end
                collected += 1
            end
        end
    end

    debug("Cash eingesammelt: " .. collected)
end

--===[ TANKSTELLEN DEFINITION ]===--
local tankstellen = {
    {
        name = "Tankstelle3",
        carTP = Vector3.new(-632.56, 44.06, 2430.84),
        playerTP = Vector3.new(-636.01, 44.11, 2474.99)
    },
    {
        name = "Tankstelle4",
        carTP = Vector3.new(-1238.83, 44.06, 2132.27),
        playerTP = Vector3.new(-1237.77, 44.11, 2089.23)
    },
}

function robTankstelle(tankInfo, car)
    debug("Starte Tankstellenraub: " .. tankInfo.name)

    -- VORHER sitzen
    teleportCarToCoordinates(car, tankInfo.carTP)
    wait(1)

    local tankModel
    local timeout = os.clock() + 6
    while not tankModel and os.clock() < timeout do
        tankModel = workspace:FindFirstChild("Map") 
            and workspace.Map:FindFirstChild("Shop_Rob") 
            and workspace.Map.Shop_Rob:FindFirstChild(tankInfo.name)
        wait(0.2)
    end

    if not tankModel then
        warn("Tankstelle konnte nicht geladen werden: " .. tankInfo.name)
        return false
    end

    local dummy = tankModel:FindFirstChild("Dummy")
    if not dummy then
        warn("Dummy fehlt bei: " .. tankInfo.name)
        return false
    end

    -- Frühzeitig prüfen
    if dummy:GetAttribute("IsBedroht") == true then
        debug(tankInfo.name .. " wurde bereits ausgeraubt. Überspringe.")
        return false
    end

    -- Jetzt erst aussteigen & Spieler-TP
    exitCar()
    wait(1)

    local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if root then
        root.CFrame = CFrame.new(tankInfo.playerTP)
        wait(0.5)
    end

    local remote = dummy:FindFirstChild("OnRob")
    if not remote then
        warn("Remote fehlt bei Dummy")
        return false
    end

    debug("Spamme Remote bis Tankstelle bedroht ist...")
    local robTimeout = os.clock() + 10
    while not dummy:GetAttribute("IsBedroht") and os.clock() < robTimeout do
        remote:FireServer()
        wait(0.1)
    end

    -- Neue Version: Warte, bis IsBedroht true wird, dann cashen
    if dummy:GetAttribute("IsBedroht") then
        debug("Tankstelle bedroht! Warte auf Geld...")

        -- Warte, bis IsBedroht wieder true wird (falls es kurzzeitig false war)
        while not dummy:GetAttribute("IsBedroht") do
            wait(0.1)
        end
        wait(1)
        collectCash()
        return true
    else
        warn("Tankstellenraub fehlgeschlagen (kein IsBedroht)")
        return false
    end
end

--===[ SCRIPT START ]===--
local car = findPlayerCar()
if not car then return end

unlockVehicle(car)
task.wait(0.2)

teleportCarCloseToPlayer(car)
task.wait(0.2)

sitInCar(car)

checkAndEquipCashOutItem()
task.wait(0.5)

teleportCarToCoordinates(car, Vector3.new(-404.33, 44.61, -204.47))
task.wait(0.2)

local bankAlreadyRobbed = checkATMsBeforeExit()

if not bankAlreadyRobbed then
    exitCar(Vector3.new(-382.76, 45.39, -234.59))
    task.wait(1.2)
    
    local atmCount = renameATMs()
    task.wait(0.3)
    
    destroyATMs(atmCount)
    task.wait(0.3)
    
    collectCash()
    debug("Bankraub abgeschlossen")
else
    debug("Bank wird übersprungen (bereits ausgeraubt)")
end

for _, tank in ipairs(tankstellen) do
    debug("Teleportiere vorab zur Tankstelle: " .. tank.name)
    sitInCar(car) -- <- Nur HIER wird gesessen
    task.wait(0.5)

    robTankstelle(tank, car)
    task.wait(0.5)
end

-- Finale Rück-Teleport
sitInCar(car)
teleportCarToCoordinates(car, Vector3.new(-18.68, -224.36, -234.48))
task.wait(2)
Teleport()
